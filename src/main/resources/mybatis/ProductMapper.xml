<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.shop.domain.Product">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="pic_url" jdbcType="VARCHAR" property="picUrl"/>
        <result column="pro_name" jdbcType="VARCHAR" property="proName"/>
        <result column="pro_details" jdbcType="VARCHAR" property="proDetails"/>
        <result column="price" jdbcType="BIGINT" property="price"/>
        <result column="repertory" jdbcType="INTEGER" property="repertory"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, pic_url, pro_name, pro_details, price, repertory
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from product
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByName" parameterType="com.shop.domain.Product" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from product
        where pro_name like concat('%',#{proName},'%')
    </select>
    <select id="ProductTotal" parameterType="com.shop.domain.Product" resultType="int">
    select count(1)
    from product
    where pro_name like concat('%',#{proName},'%')
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.shop.domain.Product">
    insert into product (id, pic_url, pro_name, 
      pro_details, price, repertory
      )
    values (#{id,jdbcType=INTEGER}, #{picUrl,jdbcType=VARCHAR}, #{proName,jdbcType=VARCHAR}, 
      #{proDetails,jdbcType=VARCHAR}, #{price,jdbcType=BIGINT}, #{repertory,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.shop.domain.Product">
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="picUrl != null">
                pic_url,
            </if>
            <if test="proName != null">
                pro_name,
            </if>
            <if test="proDetails != null">
                pro_details,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="repertory != null">
                repertory,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="picUrl != null">
                #{picUrl,jdbcType=VARCHAR},
            </if>
            <if test="proName != null">
                #{proName,jdbcType=VARCHAR},
            </if>
            <if test="proDetails != null">
                #{proDetails,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=BIGINT},
            </if>
            <if test="repertory != null">
                #{repertory,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.shop.domain.Product">
        update product
        <set>
            <if test="picUrl != null">
                pic_url = #{picUrl,jdbcType=VARCHAR},
            </if>
            <if test="proName != null">
                pro_name = #{proName,jdbcType=VARCHAR},
            </if>
            <if test="proDetails != null">
                pro_details = #{proDetails,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=BIGINT},
            </if>
            <if test="repertory != null">
                repertory = #{repertory,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.shop.domain.Product">
    update product
    set pic_url = #{picUrl,jdbcType=VARCHAR},
      pro_name = #{proName,jdbcType=VARCHAR},
      pro_details = #{proDetails,jdbcType=VARCHAR},
      price = #{price,jdbcType=BIGINT},
      repertory = #{repertory,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateProNumMinus" parameterType="com.shop.domain.Product">
    update product
    set repertory =repertory - #{number,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER} and repertory >= #{number,jdbcType=INTEGER}
  </update>
</mapper>